# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import beapi.models


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('name', models.CharField(default=b'', max_length=100, blank=True)),
                ('email', models.EmailField(default=b'', max_length=100, blank=True)),
                ('phone', models.CharField(default=b'', max_length=100, blank=True)),
                ('token', models.CharField(default=b'', max_length=255)),
                ('status', models.SmallIntegerField(default=1)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_client',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('firstname', models.CharField(default=b'', max_length=100, blank=True)),
                ('lastname', models.CharField(default=b'', max_length=100, blank=True)),
                ('email', models.EmailField(default=b'', max_length=100, blank=True)),
                ('dob', models.BigIntegerField(default=0, blank=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('lat', models.DecimalField(default=0, max_digits=10, decimal_places=2, blank=True)),
                ('lng', models.DecimalField(default=0, max_digits=10, decimal_places=2, blank=True)),
                ('blockedCards', models.CharField(default=b'', max_length=4096, blank=True)),
                ('blockedMerchants', models.CharField(default=b'', max_length=4096, blank=True)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerAccount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('clientId', models.BigIntegerField(default=1, blank=True)),
                ('cardNum', models.CharField(default=b'', max_length=255, blank=True)),
                ('phoneNum', models.BigIntegerField(default=1, db_index=True, blank=True)),
                ('limit', models.DecimalField(max_digits=10, decimal_places=2)),
                ('avaialbleLimit', models.DecimalField(max_digits=10, decimal_places=2)),
                ('currOS', models.DecimalField(max_digits=10, decimal_places=2)),
                ('activationCode', models.CharField(default=b'xxx', max_length=255)),
                ('cardNetwork', models.CharField(max_length=20, choices=[(b'Master', b'Master'), (b'Visa', b'Visa')])),
                ('cardType', models.CharField(max_length=20, choices=[(b'Credit card', b'Credit card'), (b'Debit card', b'Debit card')])),
                ('cardTitle', models.CharField(default=b'Classic Card', max_length=20)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_account',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerAgg',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField()),
                ('cardId', models.BigIntegerField()),
                ('merchantId', models.BigIntegerField()),
                ('amtSpentSS', models.DecimalField(max_digits=10, decimal_places=2)),
                ('periodKey', models.CharField(default=b'', max_length=20)),
                ('categoryKey', models.CharField(default=b'', max_length=255)),
                ('txType', models.CharField(default=b'', max_length=20)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_agg',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerCard',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('clientId', models.BigIntegerField(default=1, blank=True)),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('accountId', models.BigIntegerField(db_index=True)),
                ('cardNum', models.CharField(default=b'', max_length=255, db_index=True, blank=True)),
                ('limit', models.DecimalField(max_digits=10, decimal_places=2)),
                ('avaialbleLimit', models.DecimalField(max_digits=10, decimal_places=2)),
                ('currOS', models.DecimalField(max_digits=10, decimal_places=2)),
                ('amtSpentSS', models.DecimalField(default=0.0, max_digits=10, decimal_places=2)),
                ('cardNetwork', models.CharField(max_length=20, choices=[(b'Master', b'Master'), (b'Visa', b'Visa')])),
                ('cardType', models.CharField(max_length=20, choices=[(b'Credit card', b'Credit card'), (b'Debit card', b'Debit card')])),
                ('cardTitle', models.CharField(default=b'Classic Card', max_length=20)),
                ('status', models.SmallIntegerField(default=1)),
                ('blockedTxTypes', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_card',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerDevice',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('cardNum', models.CharField(default=b'', max_length=255, db_index=True, blank=True)),
                ('deviceType', models.SmallIntegerField(default=1, blank=True)),
                ('deviceSubType', models.SmallIntegerField(default=1, blank=True)),
                ('deviceToken', models.CharField(default=b'', max_length=255, db_index=True)),
                ('deviceRegistrationId', models.CharField(default=None, max_length=512, null=True, blank=True)),
                ('status', models.SmallIntegerField(default=1)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_device',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerMerchant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('currentDistance', models.DecimalField(max_digits=10, decimal_places=2)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_merchant',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerOffer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('merchantId', models.BigIntegerField()),
                ('status', models.CharField(max_length=30, choices=[(b'New', b'New'), (b'Read', b'Read'), (b'Archived', b'Archived'), (b'Blocked', b'Blocked')])),
                ('endDate', models.BigIntegerField(null=True)),
                ('startDate', models.BigIntegerField(null=True)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_offer',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerPrefs',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('cardId', models.BigIntegerField()),
                ('merchantId', models.BigIntegerField()),
                ('limit', models.DecimalField(max_digits=10, decimal_places=2)),
                ('periodKey', models.CharField(default=b'', max_length=20)),
                ('categoryKey', models.CharField(default=b'', max_length=20)),
                ('txType', models.CharField(default=b'', max_length=20)),
                ('ssApproval', models.CharField(max_length=20, choices=[(b'Approve', b'None'), (b'Warn', b'Warn'), (b'AskMe', b'Ask me'), (b'Block', b'Block')])),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_prefs',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerTag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('tag', models.CharField(default=b'', max_length=255)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_tag',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ConsumerTxn',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('consumerId', models.BigIntegerField(db_index=True)),
                ('cardId', models.BigIntegerField()),
                ('txDate', models.BigIntegerField()),
                ('amtSpentSS', models.DecimalField(max_digits=10, decimal_places=2)),
                ('txType', models.CharField(max_length=20, choices=[(b'Online', b'Online'), (b'Recurring', b'Recurring'), (b'Card Not Present', b'Card Not Present'), (b'Card Present', b'Card Present'), (b'International', b'International')])),
                ('reviewStatus', models.CharField(max_length=2, choices=[(b'NR', b'Not requested'), (b'RR', b'Review requested'), (b'RD', b'Reviewed')])),
                ('review', models.BigIntegerField(null=True, blank=True)),
                ('ssApproval', models.CharField(max_length=20, choices=[(b'Approve', b'None'), (b'Warn', b'Warn'), (b'AskMe', b'Ask me'), (b'Block', b'Block')])),
                ('ssApprovalStatus', models.CharField(max_length=20, choices=[(b'Approved', b'Approved'), (b'Denied', b'Denied'), (b'SentForApproval', b'SentForApproval'), (b'UserApproved', b'UserApproved'), (b'UserDenied', b'UserDenied')])),
                ('remarks', models.CharField(max_length=255, null=True)),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_consumer_txn',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('international', models.SmallIntegerField(default=1)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ss_location',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('uuid', models.CharField(max_length=50, db_index=True)),
                ('name', models.CharField(default=b'', max_length=100, blank=True)),
                ('address', models.CharField(default=b'', max_length=255, blank=True)),
                ('phone', models.CharField(default=b'', max_length=20, blank=True)),
                ('email', models.EmailField(default=b'', max_length=30, blank=True)),
                ('description', models.CharField(default=b'', max_length=512, null=True, blank=True)),
                ('businessHours', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('status', models.SmallIntegerField(default=1)),
                ('reviewStatus', models.CharField(max_length=2, choices=[(b'NR', b'Not requested'), (b'RR', b'Review requested'), (b'RD', b'Reviewed')])),
                ('lat', models.DecimalField(default=0.0, max_digits=10, decimal_places=2, blank=True)),
                ('lng', models.DecimalField(default=0.0, max_digits=10, decimal_places=2, blank=True)),
                ('accessCode', models.CharField(max_length=50, null=True, blank=True)),
                ('deviceType', models.SmallIntegerField(default=1, null=True, blank=True)),
                ('deviceSubType', models.SmallIntegerField(default=1, null=True, blank=True)),
                ('deviceRegistrationId', models.CharField(default=None, max_length=256, null=True, blank=True)),
                ('installed', models.SmallIntegerField(default=0)),
                ('mccCode', models.SmallIntegerField(default=1000)),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'ss_merchant',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MerchantOffer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('title', models.CharField(default=b'', max_length=100, blank=True)),
                ('description', models.CharField(default=b'', max_length=255, null=True, blank=True)),
                ('endDate', models.BigIntegerField(null=True)),
                ('startDate', models.BigIntegerField(null=True)),
                ('codeType', models.CharField(max_length=30, null=True, choices=[(b'none', b'None'), (b'text', b'Text'), (b'bar_code', b'Bar code'), (b'qr_code', b'QR code')])),
                ('code', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('imgUrl', models.ImageField(null=True, upload_to=beapi.models.offersPath)),
                ('distance', models.DecimalField(null=True, max_digits=10, decimal_places=2)),
                ('status', models.CharField(max_length=30, null=True, choices=[(b'Active', b'Active'), (b'Suspended', b'Suspended'), (b'Archived', b'Archived')])),
            ],
            options={
                'ordering': ('title',),
                'db_table': 'ss_merchant_offer',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MerchantOfferTargetting',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('targetType', models.CharField(max_length=30, choices=[(b'location_based', b'Location based'), (b'post_swipe', b'Post swipe'), (b'post_review', b'Post review'), (b'existing_customers', b'Existing customer')])),
                ('minVisits', models.CharField(default=b'', max_length=100, blank=True)),
                ('minTotalSpend', models.DecimalField(max_digits=10, decimal_places=2)),
                ('offer', models.ForeignKey(related_name='tagetMerchantOfferId', to='beapi.MerchantOffer')),
            ],
            options={
                'ordering': ('updated',),
                'db_table': 'ss_merchant_offer_targetting',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewTemplate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('criteria1', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('criteria2', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('criteria3', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('version', models.IntegerField(default=1)),
                ('commentRequired', models.SmallIntegerField(default=1)),
                ('merchant', models.ForeignKey(related_name='reviewTmplMerchantId', to='beapi.Merchant')),
            ],
            options={
                'ordering': ('id',),
                'db_table': 'ss_review_template',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(default=b'', max_length=100, blank=True)),
                ('merchantName', models.CharField(default=b'', max_length=100, blank=True)),
                ('merchantUuid', models.CharField(default=b'', max_length=100)),
                ('txnType', models.CharField(default=b'', max_length=100, blank=True)),
                ('mccCode', models.CharField(default=b'', max_length=255, blank=True)),
                ('category', models.CharField(default=b'', max_length=255, blank=True)),
                ('location', models.CharField(default=b'', max_length=255, blank=True)),
                ('file', models.FileField(upload_to=b'media/files', blank=True)),
            ],
            options={
                'ordering': ('id',),
                'db_table': 'ss_scenario',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TxnCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(default=b'Food', max_length=20)),
                ('mccCode', models.SmallIntegerField(default=1000)),
            ],
            options={
                'db_table': 'ss_txn_category',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TxnReview',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('txnId', models.BigIntegerField(db_index=True)),
                ('criteria1', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('criteria1Value', models.IntegerField(default=1, null=True, blank=True)),
                ('criteria2', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('criteria2Value', models.IntegerField(default=1, null=True, blank=True)),
                ('criteria3', models.CharField(default=b'', max_length=100, null=True, blank=True)),
                ('criteria3Value', models.IntegerField(default=1, null=True, blank=True)),
                ('comment', models.CharField(default=b'', max_length=512, null=True, blank=True)),
                ('response', models.CharField(default=b'', max_length=512, null=True, blank=True)),
                ('offerId', models.BigIntegerField(null=True)),
                ('merchant', models.ForeignKey(related_name='reviewMerchantId', to='beapi.Merchant')),
            ],
            options={
                'ordering': ('id',),
                'db_table': 'ss_txn_review',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TxnTag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.BigIntegerField()),
                ('updated', models.BigIntegerField()),
                ('cardId', models.BigIntegerField(db_index=True)),
                ('consumerTag', models.ForeignKey(related_name='tagId', blank=b'False', to='beapi.ConsumerTag')),
                ('consumerTxn', models.ForeignKey(related_name='consumer_txn_id', blank=b'False', to='beapi.ConsumerTxn')),
            ],
            options={
                'ordering': ('created',),
                'db_table': 'ss_txn_tag',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='merchantoffer',
            name='category',
            field=models.ForeignKey(related_name='offerCategory', blank=True, to='beapi.TxnCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='merchantoffer',
            name='merchant',
            field=models.ForeignKey(related_name='offerMerchantId', to='beapi.Merchant'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='consumertxn',
            name='category',
            field=models.ForeignKey(related_name='category', blank=True, to='beapi.TxnCategory', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='consumertxn',
            name='merchant',
            field=models.ForeignKey(related_name='merchantId', blank=True, to='beapi.Merchant', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='consumertxn',
            name='tags',
            field=models.ManyToManyField(to='beapi.ConsumerTag', null=True, through='beapi.TxnTag', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='consumeroffer',
            name='offer',
            field=models.ForeignKey(related_name='cons_offer_id', blank=True, to='beapi.MerchantOffer', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='consumermerchant',
            name='merchant',
            field=models.ForeignKey(related_name='cons_merch_id', blank=True, to='beapi.Merchant', null=True),
            preserve_default=True,
        ),
    ]
